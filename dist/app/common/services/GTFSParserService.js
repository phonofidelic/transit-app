angular.module("transitApp").factory("GTFSParserService",["$http",function(n){function r(){}return r.prototype.requestData=function(r){return n({method:"GET",url:r}).then(function(n){console.log("response: ",n);var r=n.data.split("\n");return cols=[],r.forEach(function(n){cols.push(n.split(","))}),cols})["catch"](function(n){console.log("transitData error: ",n)})},r.prototype.toArrays=function(n){var r=n.split("\n"),o=[];return r.forEach(function(n){o.push(n.split(","))}),o},r.prototype.toJSON=function(n){for(var r=[],o=0,t=1;t<n.length;t++){var e={};r.push(e)}var c=[],u=n.slice(1);return u.forEach(function(n){for(var r=0;r<n.length;r++)c.push(n[r])}),r.forEach(function(r){n[0].forEach(function(n){var e=n;angular.isUndefined(c[o])&&(c[t]=""),r[e]=c[o],o++})}),r},r.prototype.groupBy=function(n,r){var o={};return n.forEach(function(n){var t=JSON.stringify(r(n));o[t]=o[t]||[],o[t].push(n)}),console.log("groups: ",o),Object.keys(o).map(function(n){return o[n]})},r.prototype.readZip=function(n,r){var o=new JSZip;return JSZipUtils.getBinaryContent(n,function(n,t){if(n)throw console.log("JSZip error: "),n;o.loadAsync(t).then(function(n){return console.log("success!: ",n),o.file(r).async("string")}).then(function(n){return n})["catch"](function(n){console.error("readZip error: ",n)})})},r}]);