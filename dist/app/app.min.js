angular.module("transitApp",["ngRoute","ngAnimate"]),angular.module("transitApp").config(["$routeProvider","$locationProvider",function(t,o){t.when("/",{templateUrl:"app/templates/planTrip.html",controller:"PlanTripController",controllerAs:"vm"}),o.html5Mode(!0)}]),angular.module("transitApp").factory("GTFSParserService",["$http",function(t){function o(){}return o.prototype.requestData=function(o){return t({method:"GET",url:o}).then(function(t){console.log("response: ",t);var o=t.data.split("\n");return cols=[],o.forEach(function(t){cols.push(t.split(","))}),cols})["catch"](function(t){console.log("transitData error: ",t)})},o.prototype.toJSON=function(t){for(var o=[],e=0,n=1;n<t.length;n++){var r={};o.push(r)}var a=[],i=t.slice(1);return i.forEach(function(t){for(var o=0;o<t.length;o++)a.push(t[o])}),o.forEach(function(o){t[0].forEach(function(t){var r=t;angular.isUndefined(a[e])&&(a[n]=""),o[r]=a[e],e++})}),o},o.prototype.groupBy=function(t,o){var e={};return t.forEach(function(t){var n=JSON.stringify(o(t));e[n]=e[n]||[],e[n].push(t)}),console.log("groups: ",e),Object.keys(e).map(function(t){return e[t]})},o}]),angular.module("transitApp").factory("LocationService",["$http",function(t){function o(){}var e=new google.maps.Geocoder;return o.prototype.getCurrentPosition=function(t,o,e){return new Promise(function(t,o){navigator.geolocation.getCurrentPosition(t,o,e)})},o.prototype.revGeocode=function(t){var o={};return o.lat=t.latitude,o.lng=t.longitude,new Promise(function(t,n){e.geocode({location:o},function(o,e){"OK"===e?t(o[0]):n(console.log("geocoding error: ",e))})})},o}]),angular.module("transitApp").factory("TransitLandRequestService",["$http",function(t){function o(){}return o.prototype.routesByOperator=function(o){var e={region:o},n="https://transit.land/api/v1/routes?operated_by="+e.region;return t({method:"GET",url:n,eventHandlers:{progress:function(t){console.log("progress: ",t)}}}).then(function(t){return t})["catch"](function(t){console.log("transitland error: ",t)})},o.prototype.routeByOnestopId=function(o){var e="https://transit.land/api/v1/routes?onestop_id="+o;return t({method:"GET",url:e,eventHandlers:{progress:function(t){console.log("progress: ",t)}}}).then(function(t){return t})["catch"](function(t){console.log("transitland error: ",t)})},o.prototype.routesByBbox=function(o){var e=o.lat+.05,n=o.lon-.05,r=o.lat-.05,a=o.lon+.05,i="https://transit.land/api/v1/routes?bbox="+n+","+e+","+a+","+r;t.get(i).then(function(t){console.log("bbox response: ",t)})},o.prototype.getStopInfo=function(o){var e="http://transit.land/api/v1/stops?onestop_id="+o;return t({method:"GET",url:e}).then(function(t){return console.log("getStopInfo response: ",t),t})["catch"](function(t){console.log("getStopInfo error: ",t)})},o.prototype.routeBetween=function(o,e){return t({method:"GET",url:"http://transit.land/api/v1/stops?onestop_id="+o}).then(function(t){var o={origin:t.data.stops[0]};return o}).then(function(o){return t({method:"GET",url:"http://transit.land/api/v1/stops?onestop_id="+e}).then(function(t){return o.destination=t.data.stops[0],o}).then(function(o){console.log("endpoints: ",o),console.log("endpoints.origin: ",o.origin),console.log("endpoints.destination: ",o.destination);var e={locations:[{lat:o.origin.geometry.coordinates[1],lon:o.origin.geometry.coordinates[0],type:"break"},{lat:o.destination.geometry.coordinates[1],lon:o.destination.geometry.coordinates[0],type:"break"}],costing:"multimodal"},n=(JSON.stringify(e),"https://valhalla.mapzen.com/route?json="+JSON.stringify(e)+"&api_key=valhalla-m9bds2x".replace("%22",""));console.log("mapzenUrl: ",n),t({method:"GET",url:n}).then(function(t){return console.log("routeBetween response: ",t),t})["catch"](function(t){console.log("routeBetween error: ",t)})}),o})},o.prototype.scheduleStopPairs=function(o){return t.get("http://transit.land/api/v1/schedule_stop_pairs?origin_onestop_id="+o).then(function(t){return console.log("schedule_stop_pair response: ",t),t.data.schedule_stop_pairs})["catch"](function(t){console.log("schedule_stop_pair error: ",t)})},o.prototype.routeStopPattern=function(o){return t({method:"GET",url:"http://transit.land/api/v1/route_stop_patterns?onestop_id="+o}).then(function(t){console.log("from routeStopPattern: "),console.log(t);var o=[];return t.data.route_stop_patterns[0].stop_pattern.forEach(function(t){o.push(t)}),o})["catch"](function(t){console.log("routeStopPattern error: ",t)})},o}]),angular.module("transitApp").controller("PlanTripController",["$scope","$http","$log","$timeout","RequestService","LocationService","TransitLandRequestService","GTFSParserService",function(t,o,e,n,r,a,i,s){function l(){return navigator.serviceWorker?(console.log("initiating database"),idb.open("gtfsData",1,function(t){var o=t.createObjectStore("stops",{keyPath:"stop_id"});o.createIndex("by-id","stop_id")})):Promise.resolve()}function c(){navigator.serviceWorker&&navigator.serviceWorker.register("/sw.js").then(function(t){if(console.log("serviceWorker registered!"),navigator.serviceWorker.controller){if(t.waiting)return void u.updateReady(t.waiting);if(t.installing)return void u.trackInstalling(t.installing);t.addEventListener("updatefound",function(){u.trackInstalling(t.installing)});var o;navigator.serviceWorker.addEventListener("controllerchange",function(){o||(window.location.reload(),o=!0)})}})["catch"](function(t){console.log("serviceWorker registration error: ",t)})}var u=this,p=(new r,new a),d=new i,g=new s,f=L.map("map",{scrollWheelZoom:!1});u.gtfsParserService=new s,u.inputData={},u.inputData.departure={},u.inputData.departure.coords={},u.inputData.arrival={},u.inputData.arrival.coords={},u.currentPosition={},u.updateReady=function(t){console.log("updateReady"),u.showToast=!0},u.trackInstalling=function(t){console.log("trackInstalling")},u.init=function(){l(),c()},u.gtfsData=function(){var t="http://localhost:3000/assets/transitData/stop_times.txt";g.requestData(t).then(function(t){return console.log("GTFSParserService response: ",t),g.toJSON(t)}).then(function(t){console.log("jsonData: ",t),result=g.groupBy(t,function(t){return[t.stop_id]}),console.log("result: ",result[0]),result[0].forEach(function(t){console.log(t.departure_time)})})},u.gtfsToJSON=function(){$.get("http://localhost:3000/assets/transitData/calendar.txt",function(t){console.log("toJSON: ",t)})},u.transitRequest=function(t){d.routesByOperator(t).then(function(t){u.routeData=t.data.routes,console.log("transitRequest response: ",t)})},u.getStopInifo=function(){console.log("getStopInifo: "),u.routeData[0].stops_served_by_route.forEach(function(){d.getStopInfo(this.onestop_id)})},u.routeBetween=function(t,o){d.routeBetween(t,o).then(function(t){console.log("controller routeBetween response: ",t)})},u.routeRequest=function(t){d.routeByOnestopId(t).then(function(t){u.routeData=t.data.routes,console.log("routeRequest response: ",t)})},u.scheduleStopPairs=function(t){u.scheduleStopPairs&&(u.scheduleStopPairs=[]),d.scheduleStopPairs(t).then(function(t){console.log("scheduleStopPairs: ",t),u.scheduleStopPairs=t})},u.routeStopPattern=function(t){d.routeStopPattern(t).then(function(t){var e="";t.forEach(function(t){e+=t+","}),e=e.slice(0,-1),o.get("http://transit.land/api/v1/stops?onestop_id="+e+"&per_page=100").then(function(t){console.log("stops from routeStopPattern: ",t),console.log("stop names: "),t.data.stops.forEach(function(t){console.log(t.name)})})})},u.getCurrentPosition=function(){p.getCurrentPosition().then(function(t){return console.log("getPosition result: ",t.coords),u.currentPosition.lat=t.coords.latitude,u.currentPosition.lon=t.coords.longitude,t.coords}).then(function(t){p.revGeocode(t).then(function(t){console.log("region: ",t.address_components[3].short_name),u.currentPosition.addressString=t.formatted_address,u.currentPosition.countyString="o-dhw-browardcountytransit"})})},u.autoAddress=function(o){var e=document.getElementById(o),n={types:["address"]};"departure-inp"===e.id?t.departureAutocomplete=new google.maps.places.Autocomplete(e,n):t.arrivalAutocomplete=new google.maps.places.Autocomplete(e,n)},u.getAddress=function(o){"departure-inp"===o?n(function(){console.log("*** getAddress ***"),console.log("locationData: ",t.departureAutocomplete.getPlace()),t.departureAutocomplete.getPlace()&&(u.inputData.departure.name=t.departureAutocomplete.getPlace().formatted_address,u.inputData.departure.coords.lat=t.departureAutocomplete.getPlace().geometry.location.lat(),u.inputData.departure.coords.lon=t.departureAutocomplete.getPlace().geometry.location.lng())},500):n(function(){console.log("*** getAddress ***"),console.log("locationData: ",t.arrivalAutocomplete.getPlace()),t.arrivalAutocomplete.getPlace()&&(u.inputData.arrival.name=t.arrivalAutocomplete.getPlace().formatted_address,u.inputData.arrival.coords.lat=t.arrivalAutocomplete.getPlace().geometry.location.lat(),u.inputData.arrival.coords.lon=t.arrivalAutocomplete.getPlace().geometry.location.lng())},500)},u.sendRequest=function(t){var e={locations:[{lat:u.inputData.departure.coords.lat||u.currentPosition.lat,lon:u.inputData.departure.coords.lon||u.currentPosition.lon},{lat:u.inputData.arrival.coords.lat,lon:u.inputData.arrival.coords.lon}],costing:"multimodal",costing_options:{transit:{use_bus:.1,use_rail:1}},directions_options:{units:"miles"}},n="https://valhalla.mapzen.com/route?json="+JSON.stringify(e)+"&api_key=valhalla-m9bds2x".replace("%22","");o({method:"GET",url:n}).then(function(t){console.log("sendRequest response: ",t),u.tripData=t.data.trip})["catch"](function(t){console.log("RequestService.send error: ",t)})},u.initMap=function(){var t=Tangram.leafletLayer({scene:"https://raw.githubusercontent.com/tangrams/refill-style-more-labels/gh-pages/refill-style-more-labels.yaml",attribution:'<a href="https://mapzen.com/tangram" target="_blank">Tangram</a> | <a href="http://www.openstreetmap.org/about" target="_blank">&copy; OSM contributors | <a href="https://mapzen.com/" target="_blank">Mapzen</a>'});t.addTo(f),p.getCurrentPosition().then(function(t){f.setView([t.coords.latitude,t.coords.longitude],14);var o=[],e=L.latLng(t.coords.latitude+.05,t.coords.longitude-.05),n=L.latLng(t.coords.latitude+.05,t.coords.longitude+.05),r=L.latLng(t.coords.latitude-.05,t.coords.longitude+.05),a=L.latLng(t.coords.latitude-.05,t.coords.longitude-.05);o.push(e,n,r,a,e);var i=L.polyline(o,{color:"red",fill:"green"}).addTo(f);f.fitBounds(i.getBounds())})["catch"](function(t){console.log("getPosition error: ",t)});var o=(L.control.geocoder("search-3LVgAzp").addTo(f),L.control.locate({position:"topleft",keepCurrentZoomLevel:!0}).addTo(f));return o.start(),e.log("init map"),f},u.routesByBbox=function(t){d.routesByBbox(t)}}]),angular.module("transitApp").controller("MapController",["$scope","$log","LocationService","GTFSParserService",function(t,o,e,n){var r=this,a=L.map("map",{scrollWheelZoom:!1}),i=new e,s=new n;r.stops={},r.init=function(){var t=Tangram.leafletLayer({scene:"https://raw.githubusercontent.com/tangrams/refill-style-more-labels/gh-pages/refill-style-more-labels.yaml",attribution:'<a href="https://mapzen.com/tangram" target="_blank">Tangram</a> | <a href="http://www.openstreetmap.org/about" target="_blank">&copy; OSM contributors | <a href="https://mapzen.com/" target="_blank">Mapzen</a>'});t.addTo(a),i.getCurrentPosition().then(function(t){a.setView([t.coords.latitude,t.coords.longitude],14)})["catch"](function(t){console.log("getPosition error: ",t)});var e=(L.control.geocoder("search-3LVgAzp").addTo(a),L.control.locate({position:"topleft",keepCurrentZoomLevel:!0}).addTo(a));return e.start(),o.log("init map"),a},setStopMArkers=function(){var t="http://localhost:3000/assets/transitData/stops.txt";s.requestData(t).then(function(t){console.log("GTFSParserService response: ",t);for(var o=[],e=[],n=1;n<t.length-1;n++){var r={},e=L.latLng(t[n][4],t[n][5]);r.lat=t[n][4],r.lon=t[n][5],o.push(e)}return console.log("stop coords: ",o),o}).then(function(t){t.forEach(function(t){L.marker([t.lat,t.lng]).addTo(a)});var o=L.polyline(t,{color:"red"}).addTo(a);a.fitBounds(o.getBounds())})["catch"](function(t){console.log("marker error: ",t)})},r.setRoute=function(t){i.getCurrentPosition().then(function(t){return console.log("getPosition result: ",t),t.coords}).then(function(t){return L.Routing.control({waypoints:[L.latLng(t.latitude,t.longitude),L.latLng(33.8128,-117.9259)],router:L.Routing.mapzen("valhalla-m9bds2x",{costing:"auto"}),formatter:new L.Routing.mapzenFormatter,summaryTemplate:'<div class="start">{name}</div><div class="info {costing}">{distance}, {time}</div>',routeWhileDragging:!1}).addTo(a)})["catch"](function(t){console.log("getPosition error: ",t)})}}]),angular.module("transitApp").directive("mapDirective",function(){return{templateUrl:"app/modules/map/map.html",controller:"MapController",controllerAs:"vmMap"}}),angular.module("transitApp").factory("RequestService",["$http",function(t){function o(){}return o.prototype.send=function(o){t({method:"GET",url:o}).then(function(t){return t})["catch"](function(t){console.log("RequestService.send error: ",t)})},o}]);