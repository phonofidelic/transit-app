angular.module("transitApp",["ngRoute","ngAnimate","ngTouch","swipe"]),angular.module("transitApp").config(["$routeProvider","$locationProvider",function(t,o){t.when("/",{templateUrl:"app/templates/planTrip.html",controller:"PlanTripController",controllerAs:"vm"}),o.html5Mode(!0)}]),angular.module("transitApp").factory("GTFSParserService",["$http",function(t){function o(){}return o.prototype.requestData=function(o){return t({method:"GET",url:o}).then(function(t){console.log("response: ",t);var o=t.data.split("\n");return cols=[],o.forEach(function(t){cols.push(t.split(","))}),cols})["catch"](function(t){console.log("transitData error: ",t)})},o.prototype.toArrays=function(t){var o=t.split("\n"),e=[];return o.forEach(function(t){e.push(t.split(","))}),e},o.prototype.toJSON=function(t){for(var o=[],e=0,n=1;n<t.length;n++){var r={};o.push(r)}var i=[],a=t.slice(1);return a.forEach(function(t){for(var o=0;o<t.length;o++)i.push(t[o])}),o.forEach(function(o){t[0].forEach(function(t){var r=t;angular.isUndefined(i[e])&&(i[n]=""),o[r]=i[e],e++})}),o},o.prototype.groupBy=function(t,o){var e={};return t.forEach(function(t){var n=JSON.stringify(o(t));e[n]=e[n]||[],e[n].push(t)}),console.log("groups: ",e),Object.keys(e).map(function(t){return e[t]})},o.prototype.readZip=function(t,o){var e=new JSZip;return JSZipUtils.getBinaryContent(t,function(t,n){if(t)throw console.log("JSZip error: "),t;e.loadAsync(n).then(function(t){return console.log("success!: ",t),e.file(o).async("string")}).then(function(t){return t})["catch"](function(t){console.error("readZip error: ",t)})})},o}]),angular.module("transitApp").factory("LocationService",["$http",function(t){function o(){}var e=new google.maps.Geocoder;return o.prototype.getCurrentPosition=function(t,o,e){return new Promise(function(t,o){navigator.geolocation.getCurrentPosition(t,o,e)})},o.prototype.getStaticPosition=function(){return t.get("assets/mockData/staticCoordsVancouver.json").then(function(t){return console.log("position##",t),t.data})},o.prototype.geocode=function(o){return new Promise(function(e,n){var r="AIzaSyAJa-YCzQ7t6AhlXCj7c-9p1b0QdlWZWG8";return t({method:"GET",url:"https://maps.googleapis.com/maps/api/geocode/json?address="+o+"&key="+r}).then(function(t){console.log("LocationService.geocode response",t),e(t)})["catch"](function(t){$log.error("LocationService.geocode error:",t)})})},o.prototype.revGeocode=function(t){var o={};return o.lat=t.latitude,o.lng=t.longitude,new Promise(function(t,n){e.geocode({location:o},function(o,e){"OK"===e?t(o[0]):n(console.log("geocoding error: ",e))})})},o.prototype.decodePolyline=function(t,o){return new Promise(function(e,n){for(var r,i,a=0,s=0,c=0,u=[],l=0,p=0,d=null,f=Math.pow(10,o||6);a<t.length;){d=null,l=0,p=0;do d=t.charCodeAt(a++)-63,p|=(31&d)<<l,l+=5;while(d>=32);r=1&p?~(p>>1):p>>1,l=p=0;do d=t.charCodeAt(a++)-63,p|=(31&d)<<l,l+=5;while(d>=32);i=1&p?~(p>>1):p>>1,s+=r,c+=i,u.push([s/f,c/f])}e(u)})},o}]),angular.module("transitApp").factory("TransitDataService",["$scope","$http","LocationService","TransitLandRequestService",function(t,o,e,n){function r(){var t=this;this.locationService=new e,this.transitService=new n;this.locationService.getCurrentPosition().then(function(o){t.coords={lat:posision.coords.latitude,lon:o.coords.longitude}})}return r.prototype.getRoutes=function(t){return self.transitService.routsByBbox(self.coords).then(function(t){console.log("TransitDataService.getroutes: ",t)})},r}]),angular.module("transitApp").factory("TransitLandRequestService",["$http",function(t){function o(){}return o.prototype.routesByOperator=function(o){var e={region:o},n="https://transit.land/api/v1/routes?operated_by="+e.region;return t({method:"GET",url:n,eventHandlers:{progress:function(t){console.log("progress: ",t)}}}).then(function(t){return t})["catch"](function(t){console.log("transitland error: ",t)})},o.prototype.routeByOnestopId=function(o){var e="https://transit.land/api/v1/routes?onestop_id="+o;return t({method:"GET",url:e,eventHandlers:{progress:function(t){console.log("progress: ",t)}}}).then(function(t){return t})["catch"](function(t){console.log("transitland error: ",t)})},o.prototype.routesByBbox=function(o){return new Promise(function(e){var n=o.lat+.05,r=o.lon-.05,i=o.lat-.05,a=o.lon+.05,s="https://transit.land/api/v1/routes?bbox="+r+","+n+","+a+","+i;return t.get(s).then(function(t){console.log("bbox response: ",t),e(t.data)})})},o.prototype.getStaticRoutes=function(){return t.get("assets/mockData/staticRoutesPortland.json").then(function(t){return console.log("mock routes:",t),t.data})},o.prototype.getStopInfo=function(o){var e="http://transit.land/api/v1/stops?onestop_id="+o;return t({method:"GET",url:e}).then(function(t){return console.log("getStopInfo response: ",t),t})["catch"](function(t){console.log("getStopInfo error: ",t)})},o.prototype.routeBetween=function(o,e){return t({method:"GET",url:"http://transit.land/api/v1/stops?onestop_id="+o}).then(function(t){var o={origin:t.data.stops[0]};return o}).then(function(o){return t({method:"GET",url:"http://transit.land/api/v1/stops?onestop_id="+e}).then(function(t){return o.destination=t.data.stops[0],o}).then(function(o){console.log("endpoints: ",o),console.log("endpoints.origin: ",o.origin),console.log("endpoints.destination: ",o.destination);var e={locations:[{lat:o.origin.geometry.coordinates[1],lon:o.origin.geometry.coordinates[0],type:"break"},{lat:o.destination.geometry.coordinates[1],lon:o.destination.geometry.coordinates[0],type:"break"}],costing:"multimodal"},n=(JSON.stringify(e),"https://valhalla.mapzen.com/route?json="+JSON.stringify(e)+"&api_key=valhalla-m9bds2x".replace("%22",""));console.log("mapzenUrl: ",n),t({method:"GET",url:n}).then(function(t){return console.log("routeBetween response: ",t),t})["catch"](function(t){console.log("routeBetween error: ",t)})}),o})},o.prototype.scheduleStopPairs=function(o){return t.get("http://transit.land/api/v1/schedule_stop_pairs?origin_onestop_id="+o).then(function(t){return console.log("schedule_stop_pair response: ",t),t.data.schedule_stop_pairs})["catch"](function(t){console.log("schedule_stop_pair error: ",t)})},o.prototype.routeStopPattern=function(o){return t({method:"GET",url:"http://transit.land/api/v1/route_stop_patterns?onestop_id="+o}).then(function(t){console.log("from routeStopPattern: "),console.log(t);var o=[];return t.data.route_stop_patterns[0].stop_pattern.forEach(function(t){o.push(t)}),o})["catch"](function(t){console.log("routeStopPattern error: ",t)})},o}]),angular.module("transitApp").controller("MapController",["$scope","$log","LocationService","GTFSParserService",function(t,o,e,n){var r=this,i=L.map("map",{scrollWheelZoom:!1}),a=new e,s=new n;r.stops={},r.init=function(){var t=Tangram.leafletLayer({scene:"https://raw.githubusercontent.com/tangrams/refill-style-more-labels/gh-pages/refill-style-more-labels.yaml",attribution:'<a href="https://mapzen.com/tangram" target="_blank">Tangram</a> | <a href="http://www.openstreetmap.org/about" target="_blank">&copy; OSM contributors | <a href="https://mapzen.com/" target="_blank">Mapzen</a>'});t.addTo(i),a.getCurrentPosition().then(function(t){i.setView([t.coords.latitude,t.coords.longitude],14)})["catch"](function(t){console.log("getPosition error: ",t)});var e=(L.control.geocoder("search-3LVgAzp").addTo(i),L.control.locate({position:"topleft",keepCurrentZoomLevel:!0}).addTo(i));return e.start(),o.log("init map"),i},setStopMArkers=function(){var t="http://localhost:3000/assets/transitData/stops.txt";s.requestData(t).then(function(t){console.log("GTFSParserService response: ",t);for(var o=[],e=[],n=1;n<t.length-1;n++){var r={},e=L.latLng(t[n][4],t[n][5]);r.lat=t[n][4],r.lon=t[n][5],o.push(e)}return console.log("stop coords: ",o),o}).then(function(t){t.forEach(function(t){L.marker([t.lat,t.lng]).addTo(i)});var o=L.polyline(t,{color:"red"}).addTo(i);i.fitBounds(o.getBounds())})["catch"](function(t){console.log("marker error: ",t)})},r.setRoute=function(t){a.getCurrentPosition().then(function(t){return console.log("getPosition result: ",t),t.coords}).then(function(t){return L.Routing.control({waypoints:[L.latLng(t.latitude,t.longitude),L.latLng(33.8128,-117.9259)],router:L.Routing.mapzen("valhalla-m9bds2x",{costing:"auto"}),formatter:new L.Routing.mapzenFormatter,summaryTemplate:'<div class="start">{name}</div><div class="info {costing}">{distance}, {time}</div>',routeWhileDragging:!1}).addTo(i)})["catch"](function(t){console.log("getPosition error: ",t)})}}]),angular.module("transitApp").directive("mapDirective",function(){return{templateUrl:"app/modules/map/map.html",controller:"MapController",controllerAs:"vmMap"}}),angular.module("transitApp").controller("PlanTripController",["$scope","$http","$log","$timeout","RequestService","LocationService","TransitLandRequestService","GTFSParserService",function(t,o,e,n,r,i,a,s){function c(){return navigator.serviceWorker?(console.log("initiating database"),idb.open("gtfsData",3,function(t){switch(t.oldVersion){case 0:var o=t.createObjectStore("stops",{keyPath:"stop_id"});o.createIndex("by-id","stop_id");case 1:var e=t.createObjectStore("trips",{keyPath:"trip_id"});e.createIndex("by-route-id","route_id");case 2:var n=t.createObjectStore("stop_times",{keyPath:"stop_id"});n.createIndex("by-trip-id","trip_id"),n.createIndex("by-stop-id","stop_id");case 3:var r=t.createObjectStore("routes",{keyPath:"onestop_id"});r.createIndex("by-name","route_short_name")}})):Promise.resolve()}function u(){navigator.serviceWorker&&navigator.serviceWorker.register("/sw.js").then(function(t){if(console.log("serviceWorker registered!"),navigator.serviceWorker.controller){if(t.waiting)return void d(t.waiting);if(t.installing)return void l(t.installing);t.addEventListener("updatefound",function(){console.log("*** updatefound ***"),l(t.installing)});var o;navigator.serviceWorker.addEventListener("controllerchange",function(){console.log("*** controllerchange ***"),o||(console.log("*** reload ***"),window.location.reload(),o=!0)})}})["catch"](function(t){console.log("serviceWorker registration error: ",t)})}function l(t){console.log("trackInstalling"),t.addEventListener("statechange",function(){"installed"==t.state&&d(t)})}function d(t){console.log("updateReady"),P.showToast=!0,P.skipWaiting=function(){t.postMessage({action:"skipWaiting"}),location.reload(),console.log("skip, ",t)}}function f(t){var o="assets/transitData/gtfsVancouver.zip",t=t;return new Promise(function(e){JSZipUtils.getBinaryContent(o,function(o,n){if(o)throw console.log("JSZip error: "),o;C.loadAsync(n).then(function(o){return C.file(t).async("string")}).then(function(t){return E.toArrays(t)}).then(function(t){return E.toJSON(t)}).then(function(t){e(t)})["catch"](function(t){console.log("readZip error: ",t)})})})}function g(t){f("trips.txt").then(function(o){R.then(function(e){if(e){var n=[],r=e.transaction("trips","readwrite"),i=r.objectStore("trips");return o.forEach(function(o){t.route_id===o.route_id&&(i.put(o),n.push(o))}),console.log("selectedTrips:",n),h(n,t),n}}).then(function(o){m(o,t)})["catch"](function(t){console.error("Could not store trips for selected route:",t)})})["catch"](function(t){console.error("Error reading trips.txt:",t)})}function h(o,e){e.trips=[],R.then(function(o){if(o){var e=o.transaction("trips"),n=e.objectStore("trips"),r=n.index("by-route-id");return t.$apply(),r.openCursor()}}).then(function(t){if(t)return t.advance(1)}).then(function n(t){if(t)return e.route_id===t.value.route_id&&e.trips.push(t.value),t["continue"]().then(n)}).then(function(){console.log("done cusoring:"),P.tripsLoading=!1,t.$apply(),console.log(e)})["catch"](function(t){console.error("IDB cursor error:",t)})}function m(t,o){f("stop_times.txt").then(function(e){R.then(function(n){if(n){var r=n.transaction("stop_times","readwrite"),i=r.objectStore("stop_times");console.log("selectedRoute.route_id:",o.route_id),e.forEach(function(o){o.trip_id===t[0].trip_id&&i.put(o)}),console.log("stop_times done")}})["catch"](function(t){console.log("Could not collect stop_times:",t)})})["catch"](function(t){console.error("Could not read stop_times.txt:",t)})}function v(o){f("routes.txt").then(function(e){R.then(function(n){if(n){var r=[];o.forEach(function(t){e.forEach(function(o){if(t.name===o.route_short_name){o.onestop_id=t.onestop_id;var e=w(o,t);r.push(e)}})}),P.routes=r,t.$apply(),console.log("*** vm.routes: ",P.routes);var i=n.transaction("routes","readwrite"),a=i.objectStore("routes");return r.forEach(function(t){a.put(t)}),r}})})["catch"](function(t){console.error("Could not read gtfs data from routes.txt:",t)})}function y(o){var n={lat:o.coords.latitude,lon:o.coords.longitude};k.routesByBbox(n).then(function(o){var n=o.routes;return P.currentPosition.countyString=n[0].operated_by_onestop_id,t.$apply(),b=new Promise(function(t){function o(t,o){return t=Math.ceil(t),o=Math.floor(o),Math.floor(Math.random()*(o-t))+t}n.forEach(function(t){if(null===t.color||void 0===t.color){var e=o(0,B.length),n=B[e];B.splice(e,1),angular.isUndefined(n)&&(n=randomColor({luminosity:"bright"}),n=n.replace("#",""),console.log("randomcolor",n)),t.color=n}var r=t.geometry.coordinates;r.forEach(function(o){var e=[];o.forEach(function(t){e.push(L.latLng(t[1],t[0]))}),D.addLayer(L.polyline(e,{color:"#"+t.color}))}),t.active=!1}),t(D)}),b.then(function(t){A.addLayer(t)})["catch"](function(t){e.error("setUpRouteVisuals error",t)}),P.routes=n,t.$apply(),P.routes}).then(function(t){S(),v(t)})["catch"](function(t){console.error("transitService.routesByBbox request error: ",t)})}function _(o,e){G&&A.removeLayer(x),x=new L.FeatureGroup;var n=[],r=L.VectorMarkers.icon({icon:"bus",markerColor:"#"+e,prefix:"fa"});o.forEach(function(t){var o=L.latLng(t.stop_lat,t.stop_lon);n.push(o)}),n.forEach(function(t){x.addLayer(L.marker(t,{icon:r}))}),console.log("### add marker ###",G),G=!0,A.addLayer(x),t.$apply()}function S(){window.onscroll=function(){$(".routeButtonFirst").offset().top>=$(".routeButtonSecond").offset().top&&$(".routeButtonFirst").removeClass("stuck"),$(document).scrollTop()+window.innerHeight<$(".routeButtonFirst").offset().top+50&&$(".routeButtonFirst").addClass("stuck")}}function w(){for(var t={},o=arguments.length,e=0;e<o;e++)for(p in arguments[e])arguments[e].hasOwnProperty(p)&&(t[p]=arguments[e][p]);return t}var b,P=this,T=(new r,new i),k=new a,E=new s,C=new JSZip,A=L.map("map",{scrollWheelZoom:!1}),B=["00985f","4e5357","6e3217","cf8e00","ff6319","006a84","01af40","0038a5","c60c31","c60c31","01a1df","996533","6bbf43","a8a9ad","808183","fccc0a"],D=L.layerGroup();P.gtfsParserService=new s,P.inputData={},P.inputData.departure={},P.inputData.arrival={},P.currentPosition={coords:{}};var x,R=c(),G=!1;P.getCurrentPosition=function(){T.getCurrentPosition().then(function(t){return console.log("getPosition result: ",t.coords),P.currentPosition.coords.latitude=t.coords.latitude,P.currentPosition.coords.longitude=t.coords.longitude,t.coords}).then(function(t){P.inputData.departure.coords=t,T.revGeocode(t).then(function(t){console.log("region: ",t.address_components[3].short_name),P.currentPosition.addressString=t.formatted_address,P.inputData.departure.addressString=P.currentPosition.addressString})})},P.autoAddress=function(){var t=document.getElementById("departure-input"),o=document.getElementById("arrival-input"),e={types:["address"]};P.inputData.departure.autocomplete=new google.maps.places.Autocomplete(t,e),P.inputData.arrival.autocomplete=new google.maps.places.Autocomplete(o,e)},P.getAddress=function(){P.inputData.arrival.addressString=P.inputData.arrival.autocomplete.getPlace()},P.planTrip=function(){function t(t){var n={locations:[{lat:P.inputData.departure.coords.latitude||P.currentPosition.coords.latitude,lon:P.inputData.departure.coords.longitude||P.currentPosition.coords.longitude},{lat:t.lat,lon:t.lng}],costing:"multimodal",costing_options:{transit:{use_bus:.1,use_rail:1}},directions_options:{units:"miles"}},r="https://valhalla.mapzen.com/route?json="+JSON.stringify(n)+"&api_key=valhalla-m9bds2x".replace("%22","");o({method:"GET",url:r}).then(function(t){console.log("sendRequest response: ",t);var o=t.data.trip.legs[0].shape,e=t.data.trip.legs[0].maneuvers;D.clearLayers(),T.decodePolyline(o).then(function(t){var o=[];t.forEach(function(t){o.push(L.latLng(t[0],t[1]))});var e=L.polyline(o,{color:"red"}).addTo(A);console.log("routeLineLayer",D),A.fitBounds(e.getBounds())});var n=[];e.filter(function(t){"transit"===t.travel_mode&&t.transit_info.transit_stops.forEach(function(t){var o=L.marker([t.lat,t.lon]);n.push(o)})}),console.log("markerCoords",this),r&&A.removeLayer(r);var r=L.layerGroup(n);r.addTo(A)})["catch"](function(t){e.error("sendRequest error: ",t)})}console.log("routeLineLayer",D),A.removeLayer(D);var n=new Promise(function(t,o){var e=P.inputData.arrival.autocomplete.getPlace();angular.isUndefined(e)&&o(new Error("addressString is undefined")),t(e)}),r=function(t){return new Promise(function(o,e){T.geocode(t).then(function(t){console.log("getCoordsFromAddress response",t);var e=t.data.results[0].geometry.location;console.log("coords",e),o(e)})})};n.then(function(o){console.log("getAddress result",o),r(o.name).then(function(o){console.log("getAddress prommise:",o),t(o)})})["catch"](function(t){e.error("planTrip error:",t)})},P.showDefaultMap=function(){y(P.currentPosition),console.log("hello")},P.init=function(){T.getCurrentPosition().then(function(t){y(t)})},P.initMap=function(){u();var t=Tangram.leafletLayer({scene:"https://raw.githubusercontent.com/tangrams/refill-style-more-labels/gh-pages/refill-style-more-labels.yaml",attribution:'<a href="https://mapzen.com/tangram" target="_blank">Tangram</a> | <a href="http://www.openstreetmap.org/about" target="_blank">&copy; OSM contributors | <a href="https://mapzen.com/" target="_blank">Mapzen</a>'});t.addTo(A),T.getCurrentPosition().then(function(t){console.log("position:",t),A.setView([t.coords.latitude,t.coords.longitude],14)})["catch"](function(t){console.log("getPosition error: ",t)});var o=L.control.locate({position:"topleft",keepCurrentZoomLevel:!0}).addTo(A);return o.start(),e.log("init map"),A},P.setColor=function(t){return{background:"#"+t.color}},P.selectRoute=function(t){P.selectedRoute=t,f("stops.txt").then(function(o){function e(t,o){return t.find(function(t){if(t.stop_name===o.stop_name)return t})}return t.collectedStops=[],R.then(function(n){if(n){var r=n.transaction("stops","readwrite"),i=r.objectStore("stops");o.forEach(function(o){e(t.stops_served_by_route,o)&&t.stops_served_by_route.forEach(function(e){if(o.stop_name===e.stop_name){var n=w(o,e);t.collectedStops.push(n),i.put(n)}})})}}),t}).then(function(t){return _(t.collectedStops,t.color),g(t),t})["catch"](function(t){console.error("Could not collect stops data: ",t)}),console.log("selectedRoute: ",t)},P.transitionToMap=function(){$("body").scrollTop(0),console.log("scroll top")},P.testFunction=function(){console.log("hello world!")}}]),angular.module("transitApp").controller("RoutListController",["$scope","$http","LocationService","TransitLandRequestService","TransitDataService",function(t,o,e,n,r){var i=this;new n,new e;t.routes=[],i.test="hello"}]).directive("routeList",function(){return{temlate:"./routeList.html"}}),angular.module("transitApp").factory("RequestService",["$http",function(t){function o(){}return o.prototype.send=function(o){t({method:"GET",url:o}).then(function(t){return t})["catch"](function(t){console.log("RequestService.send error: ",t)})},o}]);